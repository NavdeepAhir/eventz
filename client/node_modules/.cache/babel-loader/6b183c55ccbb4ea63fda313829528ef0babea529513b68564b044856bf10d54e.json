{"ast":null,"code":"import axios from 'axios';\nconst axiosInstance = axios.create({\n  baseURL: \"http://localhost:5000\"\n});\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"jwtToken\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject"],"sources":["/Users/navdeepvala/Documents/1. Courses/2. Projects/Projects/eventz/client/src/config/axiosInstance.ts"],"sourcesContent":["import axios from 'axios';\n\nconst axiosInstance = axios.create({\n    baseURL: \"http://localhost:5000\"\n});\n\naxiosInstance.interceptors.request.use(\n(config) => {\n    const token = localStorage.getItem(\"jwtToken\");\n    if(token){\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n},(error) => {\n    return Promise.reject(error);\n}\n);\n\nexport default axiosInstance;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC/BC,OAAO,EAAE;AACb,CAAC,CAAC;AAEFF,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACrCC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAC9C,IAAGF,KAAK,EAAC;IACLD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,EAAEM,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACA,CAAC;AAED,eAAeZ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}