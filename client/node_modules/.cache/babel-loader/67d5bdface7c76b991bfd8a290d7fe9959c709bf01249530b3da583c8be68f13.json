{"ast":null,"code":"var _jsxFileName = \"/Users/navdeepvala/Documents/personal/projects/eventz/client/src/components/DarkModeToggle.tsx\",\n  _s = $RefreshSig$();\nimport { faMoon, faSun } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkModeToggle = () => {\n  _s();\n  // check system or saved preference\n  const storedTheme = localStorage.getItem(\"theme\");\n  const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n  const initialTheme = storedTheme ? storedTheme : prefersDark ? \"dark\" : \"light\";\n  const [theme, setTheme] = useState(initialTheme);\n  const toggleTheme = () => {\n    setTheme(theme === \"dark\" ? \"light\" : \"dark\");\n  };\n  useEffect(() => {\n    if (theme === \"dark\") {\n      document.documentElement.classList.add(\"dark\");\n    } else {\n      document.documentElement.classList.remove(\"dark\");\n    }\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"relative flex items-center cursor-pointer\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      className: \"sr-only peer\",\n      checked: theme === \"dark\",\n      onChange: toggleTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-14 h-7 bg-gray-300 dark:bg-gray-600 rounded-full peer-checked:bg-blue-500 transition-all duration-300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute left-1 top-1 w-5 h-5 flex items-center justify-center rounded-full bg-white dark:bg-gray-900 peer-checked:translate-x-7 transition-all duration-300\",\n      children: theme === \"dark\" ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faMoon,\n        className: \"text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faSun,\n        className: \"text-yellow-400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this)\n  //<button onClick={toggleTheme}>\n  //  {theme === \"dark\" ? (\n  //    <FontAwesomeIcon icon={faSun} />\n  //  ) : (\n  //    <FontAwesomeIcon icon={faMoon} />\n  //  )}\n  //</button>\n  ;\n};\n_s(DarkModeToggle, \"05H8UR13abkg1z8GiImRZ0Ym3KQ=\");\n_c = DarkModeToggle;\nexport default DarkModeToggle;\nvar _c;\n$RefreshReg$(_c, \"DarkModeToggle\");","map":{"version":3,"names":["faMoon","faSun","FontAwesomeIcon","useEffect","useState","jsxDEV","_jsxDEV","DarkModeToggle","_s","storedTheme","localStorage","getItem","prefersDark","window","matchMedia","matches","initialTheme","theme","setTheme","toggleTheme","document","documentElement","classList","add","remove","setItem","className","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","icon","_c","$RefreshReg$"],"sources":["/Users/navdeepvala/Documents/personal/projects/eventz/client/src/components/DarkModeToggle.tsx"],"sourcesContent":["import { faMoon, faSun } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useEffect, useState } from \"react\";\n\nconst DarkModeToggle = () => {\n  // check system or saved preference\n  const storedTheme = localStorage.getItem(\"theme\");\n  const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n  const initialTheme = storedTheme\n    ? storedTheme\n    : prefersDark\n      ? \"dark\"\n      : \"light\";\n\n  const [theme, setTheme] = useState(initialTheme);\n\n  const toggleTheme = () => {\n    setTheme(theme === \"dark\" ? \"light\" : \"dark\");\n  };\n\n  useEffect(() => {\n    if (theme === \"dark\") {\n      document.documentElement.classList.add(\"dark\");\n    } else {\n      document.documentElement.classList.remove(\"dark\");\n    }\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  return (\n    <label className=\"relative flex items-center cursor-pointer\">\n      {/* Hidden checkbox */}\n      <input\n        type=\"checkbox\"\n        className=\"sr-only peer\"\n        checked={theme === \"dark\"}\n        onChange={toggleTheme}\n      />\n\n      {/* Toggle Switch Background */}\n      <div className=\"w-14 h-7 bg-gray-300 dark:bg-gray-600 rounded-full peer-checked:bg-blue-500 transition-all duration-300\"></div>\n\n      {/* Sun & Moon Icons inside the Switch */}\n      <div className=\"absolute left-1 top-1 w-5 h-5 flex items-center justify-center rounded-full bg-white dark:bg-gray-900 peer-checked:translate-x-7 transition-all duration-300\">\n        {theme === \"dark\" ? (\n          <FontAwesomeIcon icon={faMoon} className=\"text-white\" />\n        ) : (\n          <FontAwesomeIcon icon={faSun} className=\"text-yellow-400\" />\n        )}\n      </div>\n    </label>\n    //<button onClick={toggleTheme}>\n    //  {theme === \"dark\" ? (\n    //    <FontAwesomeIcon icon={faSun} />\n    //  ) : (\n    //    <FontAwesomeIcon icon={faMoon} />\n    //  )}\n    //</button>\n  );\n};\n\nexport default DarkModeToggle;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,KAAK,QAAQ,qCAAqC;AACnE,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B;EACA,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACjD,MAAMC,WAAW,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;EAC7E,MAAMC,YAAY,GAAGP,WAAW,GAC5BA,WAAW,GACXG,WAAW,GACT,MAAM,GACN,OAAO;EAEb,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACY,YAAY,CAAC;EAEhD,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxBD,QAAQ,CAACD,KAAK,KAAK,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC;EAC/C,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,IAAIc,KAAK,KAAK,MAAM,EAAE;MACpBG,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAChD,CAAC,MAAM;MACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACnD;IACAd,YAAY,CAACe,OAAO,CAAC,OAAO,EAAER,KAAK,CAAC;EACtC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEX,OAAA;IAAOoB,SAAS,EAAC,2CAA2C;IAAAC,QAAA,gBAE1DrB,OAAA;MACEsB,IAAI,EAAC,UAAU;MACfF,SAAS,EAAC,cAAc;MACxBG,OAAO,EAAEZ,KAAK,KAAK,MAAO;MAC1Ba,QAAQ,EAAEX;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eAGF5B,OAAA;MAAKoB,SAAS,EAAC;IAAyG;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAG/H5B,OAAA;MAAKoB,SAAS,EAAC,8JAA8J;MAAAC,QAAA,EAC1KV,KAAK,KAAK,MAAM,gBACfX,OAAA,CAACJ,eAAe;QAACiC,IAAI,EAAEnC,MAAO;QAAC0B,SAAS,EAAC;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAExD5B,OAAA,CAACJ,eAAe;QAACiC,IAAI,EAAElC,KAAM;QAACyB,SAAS,EAAC;MAAiB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAC5D;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD;EACP;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ,CAAC;AAAC1B,EAAA,CAvDID,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAyDpB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}